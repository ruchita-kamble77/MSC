>python --version
>py -m pip --version
>python.exe -m pip install --upgrade pip
>py -m pip install numpy

To check-
import numpy as np
np.__version__

>pip install pandas
>pip install matplotlib

>python -m jupyter
>python -m pip show jupyter
>python -m notebook
>python -m jupyterlab


pip install numpy
#Download, Install And Explore The Features of Numpy, Scipy, Jupyter, Statsmodels and Pandas Packages
1.#Idle
import numpy as np 
# Creating an array object 
arr = np.array([[1, 2, 3], [4, 2, 5]]) 
# Printing details of the array 
print("Array type:", type(arr)) 
print("Dimensions:", arr.ndim) 
print("Shape:", arr.shape) 
print("Size:", arr.size) 
print("Element type:", arr.dtype)

2.#jupyter
#Python Code:- Program to find the area of a triangle
# Python Program to find the area of triangle
a = 5
b = 6
c = 7
# calculate the semi-perimeter
s = (a + b + c) / 2
# calculate the area
area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
# print the area
print("The area of the triangle is %0.2f" % area)

3.pip install scipy
#Sample Python Code using Scipy:
#Type the Program in Jupyter Notebook from scipy import special
# Compute 10^3
a = special.exp10(3)
print("10^3 =", a)
# Compute 2^3
b = special.exp2(3)
print("2^3 =", b)
# Compute sine of 90 degrees
c = special.sindg(90)
print("sin(90°) =", c)
# Compute cosine of 45 degrees
d = special.cosdg(45)
print("cos(45°) =", d)


4.Pip install pandas
#Sample Program: to be typed in Jupyter Notebook
#import pandas as pd
# Creating the first DataFrame
data = pd.DataFrame({
    "x1": ["y", "x", "y", "x", "x", "y"],
    "x2": range(16, 22),
    "x3": range(1, 7),
    "x4": ["a", "b", "c", "d", "e", "r"],
    "x5": range(30, 24, -1)
})
print("DataFrame 'data':")
print(data)
# Creating Series with equal lengths
s1 = pd.Series([1, 3, 4, 5, 6, 2])  # Adjusted to 6 elements
s2 = pd.Series([1.1, 3.5, 4.7, 5.8, 2.9, 9.3])  # 6 elements
s3 = pd.Series(['a', 'b', 'c', 'd', 'e', 'f'])  # Adjusted to 6 elements
# Creating a DataFrame from the Series
data_dict = {
    'first': s1,
    'second': s2,
    'third': s3
}
dfseries = pd.DataFrame(data_dict)
print("\nDataFrame 'dfseries':")
print(dfseries)


5.pip install statsmodels
import statsmodels.api as sm 
import pandas as pd 
from patsy import dmatrices 
# Load the dataset 
data = sm.datasets.get_rdataset("Guerry", "HistData").data 
# Print the column names to verify the presence of 'Region'
print(data.columns)
# Specify the variables of interest 
vars = ['Department', 'Lottery', 'Literacy', 'Wealth', 'Region'] 
# Subset the dataset to include only the specified variables 
# If 'Region' does not exist, you can drop it or choose another variable
df = data[vars]
# Display the last 5 rows of the subsetted DataFrame 
print("Last 5 rows of the DataFrame:")
print(df.tail())
